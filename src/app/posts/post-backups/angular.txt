Title: Angular Framework
Subtitle: the Good, Bad and Bugly
Content:
Angular is an open-source javascript framework based on Typescript, used to produce Single Page Applications (SPA). It mainly consists of components, modules, templates, metadata with 2-way data-binding, services, RESTful API handling, directives and injection of dependencies. We are currently on Angular 8 with Angular 9 due in october/november 2019.

Which companies uses it? Google, Wix, The Guardian, Weather.com

The Good:
* Supported by Google, so it has Google Long Term Support (LTS).
* A basic Model View Controller (MVC) architecture: View - the UI components, Controller - to conect View and Model, Model - databases and logic. 2-way data-binding synchronously links View and model.
* Modularity of component-based architecture means components are reusable elsewhere in the app.
* Dependency injection: 
* Angular Routing:
* Uses typescript, a superscript for Javascript
* Has a declarative User Interface, using HTML.
* Every object used is a Plain Old Javascript Object (POJO) so they can be modified using the usual Javascript functions. Getters and setters are not required.
* Testing: is easier as modules are separated.
* Angular Universal:
* Ivy, the new compilation and rendering pipeline to be used instead of the View Engine pipeline: still waiting for the formal release but it can be enabled using the  '--enable-ivy' flag. It will include 'tree-shaking' otherwise known as 'live code inclusion'.
* i18n internationalisation: so app can be used worldwide.
* Angular CLI: makes creating projects easier, as well as updating angular using ng update, etc.

The Bad:
Angular is better for more heavyweight applications.
It has lots of functionality and libraries so takes more memory (500 KB).
Takes longer to learn due to its complexity compared to React and Vue.
Uses the real Document Object Model (unlike React and Vue which use a virtual DOM) so performance can be slower and bugs can arise.

The Bugly:  A major new version release every 6 months can introduce breaking changes. Dependencies do not always keep up with this release schedule - e.g. Angular MD Bootstrap.